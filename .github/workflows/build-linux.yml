name: 'Build linux (no graphics driver), upload asset'

on:
  pull_request:
    types: [review_requested, synchronize]
  workflow_dispatch: {}
  

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-22.04]

    steps:
      - name: Checkout git repo
        uses: actions/checkout@v4
      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        
      - name: install dependencies (ubuntu only)
        if: matrix.os == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf
      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: install app dependencies
        run: |
          npm ci
      - name: Test
        run: |
          npm run test -- --test-timeout=10000
      - name: Build
        run: |
          export WEBKIT_DISABLE_COMPOSITING_MODE=1
          export NO_STRIP=true
          WEBKIT_DISABLE_COMPOSITING_MODE=1 NO_STRIP=true npm run tauri build
        env:
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: UCP3-GUI-${{matrix.os}}.zip
          path: |
            src-tauri/target/release/UCP3-GUI.exe
            src-tauri/target/release/bundle/nsis/UCP3-GUI*-setup.exe
            src-tauri/target/release/bundle/appimage/ucp3-gui*.AppImage
            src-tauri/target/release/bundle/deb/ucp3-gui*.deb
            src-tauri/target/release/bundle/appimage/ucp3-gui*.AppImage.tar.gz

